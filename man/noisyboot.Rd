% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/noisyboot.R
\name{noisyboot}
\alias{noisyboot}
\title{Perform Bootstrap with Noise}
\usage{
noisyboot(
  dat,
  func = function(x) mean(x, na.rm = TRUE),
  .sd = 1,
  .xi = 1.5,
  func_noise = function(x) x,
  R = 500,
  ...
)
}
\arguments{
\item{dat}{A data frame or vector containing the dataset to be bootstrapped.}

\item{func}{A function that computes the statistic of interest. Default is the mean.
This function should take the dataset as its argument and return the statistic(s).}

\item{.sd}{Numeric. The standard deviation of the noise to be added. Default is 1.}

\item{.xi}{Numeric. The skewness parameter for the noise. If 0 or NULL, normal
noise is used. Positive values of .xi skew the noise for samples towards the
reference value while negative of .xi skew the noise away from the reference
value . Default is 1.5. The reference value is the function defined in func
applied to the original dataset.}

\item{func_noise}{A function to transform the noise before adding it to the
statistic. Default is the identity function.}

\item{R}{Integer. The number of bootstrap replicates. Default is 500.}

\item{...}{Additional arguments passed to boot::boot().}
}
\value{
An object of class "boot", as returned by boot::boot().
}
\description{
This function performs a bootstrap analysis with added noise. It allows for
skewed noise and custom noise transformations, making it useful for
sensitivity analyses and stability testing.
}
\details{
The function adds noise to the statistic from each bootstrap sample.
The noise is generated using a skew-normal distribution if .xi is non-zero,
otherwise it uses a normal distribution. The noise can be further transformed
using the func_noise parameter.
}
\examples{
# Basic usage with cars dataset
result <- noisyboot(cars, func = \(x)mean(x$speed), R = 1000)
print(result)

# Using custom noise function
result_custom <- noisyboot(cars, func = \(x)mean(x$speed),
                           func_noise = \(x)sqrt(abs(x)), R = 1000)

# With vector input
vec_data <- rnorm(100)
result_vec <- noisyboot(vec_data, func = mean, .xi = 0, R = 1000)

}
